openapi: "3.0.3"
info:
  version: 0.1.2
  title: Order API
paths:
  /orders:
    get:
      operationId: get_orders
      summary: Get all orders
      security:
        - basic_auth: []
      parameters:
        - name: customer_id
          in: query
          required: false
          description: The customer id determines the customer of orders returned
          schema:
            type: string
            format: uuid
            example: 6af7fd58-c92e-4b26-9eb7-1942f6ea9aee
        - name: limit
          in: query
          required: false
          description: The limit determines the number of orders returned
          schema:
            type: integer
            default: 50
        - name: offset
          in: query
          required: false
          description: The offset determines the skipped orders
          schema:
            type: integer
            default: 0
      responses:
        "200":
          description: An array of orders
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_response"
        "400":
          $ref: "#/components/responses/bad_request_error"
        "401":
          $ref: "#/components/responses/unauthorized_error"
        "5XX":
          $ref: "#/components/responses/unexpected_error"
    post:
      operationId: post_orders
      summary: Place a new order
      security:
        - basic_auth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/order_request"
      responses:
        "201":
          description: Order created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/order_response"
        "400":
          $ref: "#/components/responses/bad_request_error"
        "401":
          $ref: "#/components/responses/unauthorized_error"
        "5XX":
          $ref: "#/components/responses/unexpected_error"
  /orders/{order_id}:
    get:
      operationId: get_order
      summary: Get information about a specific order
      security:
        - basic_auth: []
      parameters:
        - name: order_id
          in: path
          required: true
          description: The id of the order to retrieve
          schema:
            type: string
      responses:
        "200":
          description: Information about a single order
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/order_response"
        "400":
          $ref: "#/components/responses/bad_request_error"
        "401":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          description: Order not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
        "5XX":
          $ref: "#/components/responses/unexpected_error"
components:
  securitySchemes:
    basic_auth:
      type: http
      scheme: basic
  responses:
    bad_request_error:
      description: Bad Request Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error_response"
    unauthorized_error:
      description: Unauthorized Error
    unexpected_error:
      description: Unexpected Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error_response"
  schemas:
    order_request:
      type: object
      required:
        - customer_id
        - items
      properties:
        customer_id:
          type: string
          format: uuid
          example: 6af7fd58-c92e-4b26-9eb7-1942f6ea9aee
        items:
          type: array
          items:
            $ref: "#/components/schemas/order_item_request"
    order_item_request:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: marshmallow
    order_response:
      type: object
      required:
        - customer_id
        - order_id
        - creation_date
        - status
        - items
      properties:
        customer_id:
          type: string
          format: uuid
          example: f8f3d5ce-3fc1-4d9d-9306-f5165b9279cc
        order_id:
          type: string
          example: I3xXiIqbP92-NONE-Ui*8i0kFHcA
        creation_date:
          type: string
          format: date-time
        status:
          $ref: "#/components/schemas/order_status"
        items:
          type: array
          items:
            $ref: "#/components/schemas/order_item_response"
    order_status:
      type: string
      enum:
        - order_completed
        - order_canceled
        - order_in_progress
        - order_placed
    orders_response:
      type: array
      items:
        $ref: "#/components/schemas/order_response"
    order_item_response:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: banana
    error_response:
      type: object
      required:
        - method
        - path
        - timestamp
        - code
        - correlation_id
      properties:
        method:
          type: string
          example: GET
        path:
          type: string
          example: /orders
        timestamp:
          type: string
          format: date-time
        code:
          type: integer
          example: 9009
        message:
          type: string
          example: panic it's over 9000!
        correlation_id:
          type: string
          example: 864f8731-9bbf-46e3-b84e-fda43a910fe4
