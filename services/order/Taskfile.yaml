version: 3

env:
  PROJECT_NAME: order-service
  PROFILE: none-local
  FLYWAY_USER: test
  FLYWAY_PASSWORD: test
  VERSION: latest

tasks:
  ### DEPENDENCIES ###
  dep:install:
    desc: Install dependencies
    cmds:
      - go install github.com/deepmap/oapi-codegen/cmd/oapi-codegen@v1.12.4
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.52.2
      - go install sigs.k8s.io/kustomize/kustomize/v4@v4.5.6
    status:
      - oapi-codegen --version
      - golangci-lint --version
      - kustomize version

  dep:copy:
    desc: Copy files
    run: when_changed
    sources:
      - ./config/app.config.none-local.yaml
      - ./config/app.key
      - ./config/app.crt
    cmds:
      - install -D ./config/app.config.none-local.yaml ./app/config/config.yaml
      - install -D ./config/app.key ./app/config/app.key
      - install -D ./config/app.crt ./app/config/app.crt

  dep:generate:
    desc: Copy files
    run: when_changed
    deps:
      - dep:install
    sources:
      - ./api-definition/order_api.yaml
      - ./api-definition/app.model.yaml
      - ./api-definition/app.server.yaml
      - ./api-definition/test.client.yaml
    cmds:
      - oapi-codegen --config ./api-definition/app.model.yaml ./api-definition/order_api.yaml
      - oapi-codegen --config ./api-definition/app.server.yaml ./api-definition/order_api.yaml
      - oapi-codegen --config ./api-definition/test.client.yaml ./api-definition/order_api.yaml

  ### TESTS ###
  test:unit:
    desc: Run unit tests
    dir: ./app
    deps:
      - dep:copy
      - dep:generate
    cmds:
      - go test ./...

  test:lint:
    desc: Run linters against app
    dir: ./app
    deps:
      - dep:install
      - dep:copy
      - dep:generate
    cmds:
      - golangci-lint run

  test:spectral:
    desc: Run spectral linter against openapi definition
    dir: ./api-definition
    cmds:
      - docker run --rm -it
        --volume ./spectral.ruleset.yaml:/tmp/ruleset.yaml
        --volume ./order_api.yaml:/tmp/order_api.yaml
        stoplight/spectral:6.7.0
        --ruleset "/tmp/ruleset.yaml"
        lint "/tmp/order_api.yaml"

  test:smoke:
    desc: Run smoke tests
    dir: ./test-smoke
    deps:
      - dep:generate
    cmds:
      - go test -count=1 ./...

  test:integration:
    desc: Run integration tests
    dir: ./test-integration
    deps:
      - dep:generate
    cmds:
      - go test -count=1 ./...

  test:load:
    desc: Run load tests
    dir: ./test-load
    cmds:
      - docker run -it
        --rm
        --network host
        --volume ./script.js:/k6/script.js
        grafana/k6:0.39.0
        run /k6/script.js

  ### DATABASE ###
  database:migrate:
    desc: Migrate database
    dir: ./migration-database
    requires:
      vars:
        - PROFILE
        - FLYWAY_USER
        - FLYWAY_PASSWORD
    cmds:
      - docker run -it
        --rm
        --network host
        --volume ./migration:/flyway/sql/migration
        --volume ./${PROFILE}.conf:/flyway/conf/flyway.conf
        flyway/flyway:9.17.0-alpine
        clean
        migrate
        -user=${FLYWAY_USER}
        -password=${FLYWAY_PASSWORD}

  ### APP ###
  app:run:
    desc: Run the app
    dir: ./app
    deps:
      - dep:copy
      - dep:generate
    cmds:
      - go run main.go

  app:build:
    desc: Build the app into an executable
    dir: ./app
    deps:
      - dep:generate
    cmds:
      - go build

  ### DOCKER ###
  docker:up:
    desc: Start docker containers
    dir: ./deployment-docker
    requires:
      vars:
        - PROJECT_NAME
    cmds:
      - docker compose -p ${PROJECT_NAME}
        -f ./docker-compose.yaml
        up -d
        --force-recreate
        --wait

  docker:app:up:
    desc: Start app docker container
    dir: ./deployment-docker
    requires:
      vars:
        - PROJECT_NAME
    deps:
      - dep:generate
    cmds:
      - docker compose -p ${PROJECT_NAME}
        -f ./app.docker-compose.yaml
        up
        --force-recreate
        --build

  docker:down:
    desc: Stop docker containers
    dir: ./deployment-docker
    requires:
      vars:
        - PROJECT_NAME
    cmds:
      - docker compose -p ${PROJECT_NAME}
        -f ./docker-compose.yaml
        -f ./app.docker-compose.yaml
        down