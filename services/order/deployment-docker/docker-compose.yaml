services:
  aws-localstack:
    image: localstack/localstack:3.6
    container_name: aws-localstack
    volumes:
      - ./localstack:/etc/localstack/init:ro
    ports:
      - '4566:4566'

  database-postgres:
    image: postgres:16.4-alpine3.20
    container_name: database-postgres
    environment:
      POSTGRES_DB: test
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready' ]
      start_period: 1s
    ports:
      - '5432:5432'

  database-flyway-migration:
    image: flyway/flyway:10.17
    container_name: database-flyway-migration
    command: [ 'clean', 'migrate', '-user=test', '-password=test' ]
    volumes:
      - ../migration-database/migration:/flyway/sql/migration:ro
      - ../migration-database/none-dev.conf:/flyway/conf/flyway.conf:ro
    depends_on:
      - database-postgres

  app:
    image: ghcr.io/valentinlutz/order-service:latest
    build:
      context: ../../../
      dockerfile: ./services/order/app/Dockerfile
      args:
        GO_BUILD_ARGS: -cover
    container_name: app
    environment:
      VERSION: docker-container
      GOCOVERDIR: /app/coverage
    volumes:
      - ../config/app.config.none-dev.yaml:/app/config/config.yaml:ro
      - ../config/app.public.none-dev.crt:/app/config/app.public.none-dev.crt:ro
      - ../config/app.private.none-dev.key:/app/config/app.private.none-dev.key:ro
      - ../test-integration/coverage:/app/coverage:rw
    healthcheck:
      test: [ 'CMD-SHELL', 'wget --no-verbose --tries=1 --output-document=- --no-check-certificate https://127.0.0.1:10443/status/health || exit 1' ]
      start_period: 1s
    restart: on-failure:3
    ports:
      - "10443:10443"
    depends_on:
      - database-postgres
      - database-flyway-migration