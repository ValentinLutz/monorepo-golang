version: '3.8'
services:
  # mqtt-emqx:
  #   image: emqx:5.3.0
  #   container_name: mqtt-emqx
  #   environment:
  #     EMQX_DASHBOARD__DEFAULT_USERNAME: test
  #     EMQX_DASHBOARD__DEFAULT_PASSWORD: test
  #   network_mode: host
  #   # ports:
  #   #   - 1883:1883
  #   #   - 18083:18083 

  aws-localstack:
    image: localstack/localstack:2.3.2
    container_name: aws-localstack
    environment:
      DEFAULT_REGION: eu-central-1
    volumes:
      - ./localstack:/etc/localstack/init:ro
    network_mode: host
    # ports:
    #   - 4566:4566

  database-postgres:
    image: postgres:15.4-alpine3.18
    container_name: database-postgres
    environment:
      POSTGRES_DB: test
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
    network_mode: host
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
    # ports:
    #   - 5432:5432

  monitoring-postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.14.0
    container_name: monitoring-postgres-exporter
    environment:
      DATA_SOURCE_NAME: postgresql://test:test@localhost:5432/test?sslmode=disable
    network_mode: host
    # ports:
    #   - 9187:9187

  monitoring-prometheus:
    image: prom/prometheus:v2.47.2
    container_name: monitoring-prometheus
    volumes:
      - ./prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml:ro
    network_mode: host
    # ports:
    #   - 9090:9090

  monitoring-grafana:
    image: grafana/grafana:10.1.5
    container_name: monitoring-grafana
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
    volumes:
      - ./grafana/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml:ro
      - ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml:ro
      - ./grafana/app.json:/etc/grafana/provisioning/dashboards/app.json:ro
      - ./grafana/postgres.json:/etc/grafana/provisioning/dashboards/posgtres.json:ro
    network_mode: host
    # ports:
    #   - 3000:3000
